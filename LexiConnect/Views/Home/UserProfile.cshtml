@{
    Layout = "_Layout";
    ViewData["Title"] = "UserProfile";
}
@model LexiConnect.Models.ViewModels.UserProfileViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile - LexiConnect</title>
    <link rel="stylesheet" href="~/css/Home/UserProfile.css" />
</head>

<body>
    <div class="dashboard-container">

        <partial name="_Sidebar" />

        <!-- Main Content -->
        <div class="main-content">
            <!-- Profile Header -->
            <div class="profile-header">
                <div class="profile-avatar-large">
                    @if (!string.IsNullOrEmpty(Model.User.AvatarUrl) && Model.User.AvatarUrl != "~/image/default-avatar.png")
                    {
                        <img src="@Model.User.AvatarUrl" alt="@Model.User.FullName" />
                    }
                    else
                    {
                        @Model.User.FullName?.Substring(0, 1).ToUpper()
                    }
                </div>
                <div class="profile-info">
                    <h1>@Model.User.FullName</h1>
                    <p class="affiliation">University: @Model.User.University?.Name</p>
                    @if (Model.User.Major != null)
                    {
                        <p class="major">Major: @Model.User.Major.Name</p>
                    }
                    <div class="profile-stats-row">
                        <div class="stat-card">
                            <span class="number">@Model.Documents?.Count()</span>
                            <span class="label">Uploads</span>
                        </div>
                        <div class="stat-card">
                            <span class="number">@Model.FollowerNum</span>
                            <span class="label">Follows</span>
                        </div>
                        <div class="stat-card">
                            <span class="number">@Model.Upvotes</span>
                            <span class="label">Upvotes</span>
                        </div>
                        <div class="stat-card points-card">
                            <span class="number">@Model.User.PointsBalance</span>
                            <span class="label">Points</span>
                        </div>
                        <div class="stat-card total-points-card">
                            <span class="number">@Model.User.TotalPointsEarned</span>
                            <span class="label">Total Earned</span>
                        </div>
                    </div>
                </div>
                <div class="profile-actions">
                    <a href="@Url.Action("EditProfile", "Home")" class="btn-edit">Edit Profile</a>
                </div>
            </div>

            <!-- User Details & Subscription Section -->
            <div class="user-details-section">
                <!-- User Information Card -->
                <div class="info-card">
                    <h3 class="card-title">
                        <span>👤</span>
                        User Information
                    </h3>
                    <div class="info-grid">
                        <div class="info-item">
                            <label>Email:</label>
                            <span>@Model.User.Email</span>
                        </div>
                        <div class="info-item">
                            <label>Phone:</label>
                            <span>@(string.IsNullOrEmpty(Model.User.PhoneNumber) ? "Not provided" : Model.User.PhoneNumber)</span>
                        </div>
                        <div class="info-item">
                            <label>University:</label>
                            <span>@(Model.User.University?.Name ?? "Not specified")</span>
                        </div>
                        <div class="info-item">
                            <label>Major:</label>
                            <span>@(Model.User.Major?.Name ?? "Not specified")</span>
                        </div>
                        <div class="info-item">
                            <label>Points Balance:</label>
                            <span class="points-balance">@Model.User.PointsBalance points</span>
                        </div>
                        <div class="info-item">
                            <label>Total Points Earned:</label>
                            <span class="points-earned">@Model.User.TotalPointsEarned points</span>
                        </div>
                    </div>
                </div>

                <!-- Subscription Plan Card -->
                @if (Model.User.SubscriptionPlan != null && Model.User.SubscriptionPlan.PlanId != 1)
                {
                    <a href="@Url.Action("ManageSubscription", "Home")" class="subscription-card-link">
                        <div class="subscription-card @(Model.ActiveSubscription ? "expired" : "active")">
                            <div class="subscription-header">
                                <h3 class="card-title">
                                    <span>💎</span>
                                    Current Subscription
                                </h3>
                                <div class="subscription-status @(Model.ActiveSubscription ? "status-active" : "status-expired")">
                                    @(Model.ActiveSubscription ? "EXPIRED" : "ACTIVE")
                                </div>
                            </div>
                            <div class="subscription-details">
                                <div class="plan-info">
                                    <h4 class="plan-name">@Model.User.SubscriptionPlan.DisplayName</h4>
                                    <p class="plan-type">@Model.User.SubscriptionPlan.Name</p>
                                </div>
                                <div class="subscription-dates">
                                    @if (Model.User.SubscriptionStartDate.HasValue)
                                    {
                                        <div class="date-item">
                                            <label>Started:</label>
                                            <span>@Model.User.SubscriptionStartDate.Value.ToString("MMM dd, yyyy")</span>
                                        </div>
                                    }
                                    @if (Model.User.SubscriptionEndDate.HasValue)
                                    {
                                        <div class="date-item">
                                            <label>@(Model.User.SubscriptionEndDate < DateTime.Now ? "Expired:" : "Expires:")</label>
                                            <span>@Model.User.SubscriptionEndDate.Value.ToString("MMM dd, yyyy")</span>
                                        </div>
                                        @if (Model.User.SubscriptionStartDate.HasValue)
                                        {
                                            <div class="date-item">
                                                <label>Duration:</label>
                                                <span>
                                                    @{
                                                        var duration = Model.User.SubscriptionEndDate.Value - Model.User.SubscriptionStartDate.Value;
                                                        var days = duration.Days;
                                                        if (days >= 365)
                                                        {
                                                            var years = days / 365;
                                                            <text>@years year@(years > 1 ? "s" : "")</text>
                                                        }
                                                        else if (days >= 30)
                                                        {
                                                            var months = days / 30;
                                                            <text>@months month@(months > 1 ? "s" : "")</text>
                                                        }
                                                        else
                                                        {
                                                            <text>@days day@(days > 1 ? "s" : "")</text>
                                                        }
                                                    }
                                                </span>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="date-item">
                                            <label>Status:</label>
                                            <span>No end date specified</span>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="subscription-footer">
                                <span class="manage-text">Click to manage subscription</span>
                                <svg class="arrow-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                            </div>
                        </div>
                    </a>
                }
                else
                {
                    <a href="@Url.Action("SubscriptionPlans", "Home")" class="subscription-card-link">
                        <div class="subscription-card no-subscription">
                            <div class="subscription-header">
                                <h3 class="card-title">
                                    <span>📦</span>
                                    Subscription Plan
                                </h3>
                                <div class="subscription-status status-none">
                                    NO PLAN
                                </div>
                            </div>
                            <div class="subscription-details">
                                <p class="no-plan-text">You don't have an active subscription plan.</p>
                                <p class="upgrade-text">Upgrade to access premium features and exclusive content.</p>
                            </div>
                            <div class="subscription-footer">
                                <span class="manage-text">View available plans</span>
                                <svg class="arrow-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                            </div>
                        </div>
                    </a>
                }
            </div>

            <!-- Profile Sections -->
            <div class="profile-sections">
                <!-- My Uploads Section -->
                <div class="profile-section">
                    <h2 class="section-title">
                        <span>📚</span>
                        My Uploads
                    </h2>
                    <div class="uploads-list">
                        @if (Model.Documents?.Count() > 0)
                        {
                            @foreach (var document in Model.Documents)
                            {
                                <a href="#" style="text-decoration: none;">
                                    <div class="upload-item">
                                        <div class="upload-icon">📄</div>
                                        <div class="upload-details">
                                            <h4>@document.Title</h4>
                                            <p>
                                                @(document.Description?.Length > 35
                                                                                        ? document.Description.Substring(0, 35) + "..."
                                                                                        : document.Description)
                                    </p>
                                </div>
                                <div class="upload-stats">
                                    <div class="views">@document.ViewCount views</div>
                                    <div class="rating">
                                        <svg viewBox="0 -0.5 21 21" width="21" height="21" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <title>like [#1385]</title> <desc>Created with Sketch.</desc> <defs> </defs> <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"> <g id="Dribbble-Light-Preview" transform="translate(-259.000000, -760.000000)" fill="#000000"> <g id="icons" transform="translate(56.000000, 160.000000)"> <path d="M203,620 L207.200006,620 L207.200006,608 L203,608 L203,620 Z M223.924431,611.355 L222.100579,617.89 C221.799228,619.131 220.638976,620 219.302324,620 L209.300009,620 L209.300009,608.021 L211.104962,601.825 C211.274012,600.775 212.223214,600 213.339366,600 C214.587817,600 215.600019,600.964 215.600019,602.153 L215.600019,608 L221.126177,608 C222.97313,608 224.340232,609.641 223.924431,611.355 L223.924431,611.355 Z" id="like-[#1385]"> </path> </g> </g> </g> </g></svg>
                                        @document.LikeCount
                                    </div>
                                </div>
                            </div>
                        </a>
                                                }
                        }
                        else
                        {
                            <div class="empty-state">
                                <p>No uploads yet. Start sharing your documents!</p>
                            </div>
                        }
                    </div>
                </div>

                <!-- Recent Activity Section -->
                <div class="profile-section">
                    <h2 class="section-title">
                        <span>⚡</span>
                        Recent Activity
                    </h2>
                    <div class="activity-list">
                        @if (Model.RecentActivities?.Count() > 0)
                        {
                            @foreach (var activity in Model.RecentActivities)
                            {
                                if (activity.CourseId > 0 && activity.Course != null)
                                {
                                    <div class="activity-item">
                                        <div class="activity-icon">📤</div>
                                        <div class="activity-content">
                                            <h4>@activity.Course.CourseName</h4>
                                            <p>
                                                @(activity.Course.Description?.Length > 35
                                                                                    ? activity.Course.Description?.Substring(0, 35) + "..."
                                                                                    : activity.Course.Description)
                                </p>
                            </div>
                            <div class="activity-time">Academic year: @activity.Course.AcademicYear</div>
                        </div>
                                                }
                                if (activity.DocumentId > 0 && activity.Document != null)
                                {
                                    <div class="activity-item">
                                        <div class="activity-icon">📤</div>
                                        <div class="activity-content">
                                            <h4>@activity.Document.Title</h4>
                                            <p>
                                                @(activity.Document.Description?.Length > 35
                                                                                    ? activity.Document.Description?.Substring(0, 35) + "..."
                                                                                    : activity.Document.Description)
                                </p>
                            </div>
                            <div class="activity-time">Created at: @activity.Document.CreatedAt</div>
                        </div>
                                                }
                            }
                        }
                        else
                        {
                            <div class="empty-state">
                                <p>No recent activity to display.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>